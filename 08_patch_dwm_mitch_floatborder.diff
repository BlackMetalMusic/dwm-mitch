diff -Narup 07_dwm-4.7_reload/config.def.h 08_dwm-4.7_floatborder/config.def.h
--- 07_dwm-4.7_reload/config.def.h	2007-12-26 12:22:17.000000000 +0100
+++ 08_dwm-4.7_floatborder/config.def.h	2007-12-26 12:22:17.000000000 +0100
@@ -3,6 +3,7 @@
 /* appearance */
 #define BARPOS			BarTop /* BarBot, BarOff */
 #define BORDERPX		1
+#define FLOATBORDERPX		1
 #define FONT			"-*-terminus-medium-*-*-*-*-*-*-*-*-*-*-*"
 #define NORMBORDERCOLOR		"#cccccc"
 #define NORMBGCOLOR		"#cccccc"
diff -Narup 07_dwm-4.7_reload/dwm.c 08_dwm-4.7_floatborder/dwm.c
--- 07_dwm-4.7_reload/dwm.c	2007-12-26 12:22:17.000000000 +0100
+++ 08_dwm-4.7_floatborder/dwm.c	2007-12-26 12:22:17.000000000 +0100
@@ -168,6 +168,7 @@ void resizemouse(Client *c);
 void restack(void);
 void run(void);
 void scan(void);
+void setborderbyfloat(Client *c, Bool configurewindow);
 void setclientstate(Client *c, long state);
 void setlayout(const char *arg);
 void setmwfact(const char *arg);
@@ -954,7 +955,6 @@ manage(Window w, XWindowAttributes *wa) 
 	Client *c, *t = NULL;
 	Window trans;
 	Status rettrans;
-	XWindowChanges wc;
 
 	c = emallocz(sizeof(Client));
 	c->win = w;
@@ -980,10 +980,7 @@ manage(Window w, XWindowAttributes *wa) 
 			c->y = way;
 		c->border = BORDERPX;
 	}
-	wc.border_width = c->border;
-	XConfigureWindow(dpy, w, CWBorderWidth, &wc);
 	XSetWindowBorder(dpy, w, dc.norm[ColBorder]);
-	configure(c); /* propagates border_width, if size doesn't change */
 	updatesizehints(c);
 	XSelectInput(dpy, w, EnterWindowMask | FocusChangeMask | PropertyChangeMask | StructureNotifyMask);
 	grabbuttons(c, False);
@@ -993,6 +990,7 @@ manage(Window w, XWindowAttributes *wa) 
 	applyrules(c);
 	if(!c->isfloating)
 		c->isfloating = (rettrans == Success) || c->isfixed;
+	setborderbyfloat(c, True);
 	attach(c);
 	attachstack(c);
 	XMoveResizeWindow(dpy, c->win, c->x, c->y, c->w, c->h); /* some windows require this */
@@ -1161,6 +1159,7 @@ resize(Client *c, int x, int y, int w, i
 	if(y + h + 2 * c->border < sy)
 		y = sy;
 	if(c->x != x || c->y != y || c->w != w || c->h != h) {
+		setborderbyfloat(c, False);
 		c->x = wc.x = x;
 		c->y = wc.y = y;
 		c->w = wc.width = w;
@@ -1328,6 +1327,24 @@ scan(void) {
 }
 
 void
+setborderbyfloat(Client *c, Bool configurewindow) {
+	XWindowChanges wc;
+	unsigned int newborder;
+	
+	newborder = ((c->isfloating && !c->ismax) || (layout[selws-1]->arrange == floating)) ? FLOATBORDERPX : BORDERPX;
+	if (c->border == newborder)
+		return;
+	
+	c->border = newborder;
+	
+	if (!configurewindow)
+		return;
+	wc.border_width = c->border;
+	XConfigureWindow(dpy, c->win, CWBorderWidth, &wc);
+	configure(c);
+}
+
+void
 setclientstate(Client *c, long state) {
 	long data[] = {state, None};
 
@@ -1613,6 +1630,7 @@ togglefloating(const char *arg) {
 	if(!sel)
 		return;
 	sel->isfloating = !sel->isfloating;
+	setborderbyfloat(sel, True);
 	if(sel->isfloating)
 		resize(sel, sel->x, sel->y, sel->w, sel->h, True);
 	arrange();
