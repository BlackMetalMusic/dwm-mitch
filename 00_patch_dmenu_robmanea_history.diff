diff -Narup dmenu-3.8/config.h 00_dmenu-3.8_history/config.h
--- dmenu-3.8/config.h	2008-07-29 20:20:48.000000000 +0200
+++ 00_dmenu-3.8_history/config.h	2008-07-31 20:19:23.000000000 +0200
@@ -7,3 +7,5 @@ static const char *normfgcolor = "#00000
 static const char *selbgcolor  = "#0066ff";
 static const char *selfgcolor  = "#ffffff";
 static unsigned int spaceitem  = 30; /* px between menu items */
+
+#define HIST_SIZE              20
diff -Narup dmenu-3.8/dmenu.c 00_dmenu-3.8_history/dmenu.c
--- dmenu-3.8/dmenu.c	2008-07-29 20:20:48.000000000 +0200
+++ 00_dmenu-3.8_history/dmenu.c	2008-07-31 20:20:38.000000000 +0200
@@ -70,6 +70,9 @@ static int textw(const char *text);
 static char *maxname = NULL;
 static char *prompt = NULL;
 static char text[4096];
+static char hist[HIST_SIZE][1024];
+static char *histfile = NULL;
+static int hcnt = 0;
 static int cmdw = 0;
 static int promptw = 0;
 static int ret = 0;
@@ -170,6 +173,46 @@ cleanup(void) {
 	XUngrabKeyboard(dpy, CurrentTime);
 }
 
+int
+writehistory(char *command) {
+    int i = 0, j = hcnt;
+    FILE *f;
+
+    if(!histfile)
+        return 0;
+
+    if( (f = fopen(histfile, "w")) ) {
+        fputs(command, f); fputc('\n', f);
+        for(; i<HIST_SIZE && i<j; i++) {
+            if(strcmp(command, hist[i]) != 0) 
+                fputs(hist[i], f); fputc('\n', f);
+        }
+        fclose(f);
+        return 1;
+    }
+
+    return 0;
+}
+
+static int
+readhistory (void) {
+    char buf[1024];
+    FILE *f;
+
+
+    if(!histfile)
+        return 0;
+
+    if( (f = fopen(histfile, "r+")) ) {
+        while(fgets(buf, sizeof buf, f))  
+            strncpy(hist[hcnt++], buf, (strlen(buf) <= 1024) ? strlen(buf): 1024 );
+        fclose(f);
+    }
+
+    return hcnt;
+}
+
+
 void
 drawmenu(void) {
 	Item *i;
@@ -473,6 +516,7 @@ kpress(XKeyEvent * e) {
 			fprintf(stdout, "%s", sel->text);
 		else if(*text)
 			fprintf(stdout, "%s", text);
+                writehistory( (sel == NULL) ? text : sel->text);
 		fflush(stdout);
 		running = False;
 		break;
@@ -541,8 +585,34 @@ readstdin(void) {
 	char *p, buf[1024];
 	unsigned int len = 0, max = 0;
 	Item *i, *new;
+	int k;
 
 	i = 0;
+	if( readhistory() )  {
+		for(k=0; k<hcnt; k++) {
+			len = strlen(hist[k]);
+			if (hist[k][len - 1] == '\n')
+				hist[k][len - 1] = 0;
+			if(!(p = strdup(hist[k])))
+				eprint("fatal: could not strdup() %u bytes\n", strlen(hist[k]));
+			if(max < len) {
+				maxname = p;
+				max = len;
+			}
+			if((new = (Item *)malloc(sizeof(Item))) == NULL)
+				eprint("fatal: could not malloc() %u bytes\n", sizeof(Item));
+			new->next = new->left = new->right = NULL;
+			new->text = p;
+			if(!i)
+				allitems = new;
+			else 
+				i->next = new;
+			i = new;
+		}
+	}
+	
+	
+	len=0; max=0;    
 	while(fgets(buf, sizeof buf, stdin)) {
 		len = strlen(buf);
 		if (buf[len - 1] == '\n')
@@ -714,6 +784,9 @@ main(int argc, char *argv[]) {
 		else if(!strcmp(argv[i], "-sf")) {
 			if(++i < argc) selfgcolor = argv[i];
 		}
+		else if(!strcmp(argv[i], "-hist")) {
+			if(++i < argc) histfile = argv[i];
+		}
 		else if(!strcmp(argv[i], "-v"))
 			eprint("dmenu-"VERSION", Â© 2006-2008 dmenu engineers, see LICENSE for details\n");
 		else
