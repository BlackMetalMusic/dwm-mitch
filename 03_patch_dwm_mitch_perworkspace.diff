diff -Narup 02_dwm-4.4.1_workspace/dwm.h 03_dwm-4.4.1_perworkspace/dwm.h
--- 02_dwm-4.4.1_workspace/dwm.h	2007-09-16 21:00:56.000000000 +0200
+++ 03_dwm-4.4.1_perworkspace/dwm.h	2007-09-16 21:00:56.000000000 +0200
@@ -88,6 +88,7 @@ extern Display *dpy;
 extern Window root, barwin;
 extern char wstext[MAXWSTEXTWIDTH];
 extern int wstextwidth;
+extern double mwfact[MAXWORKSPACES];
 
 /* client.c */
 void attach(Client *c);			/* attaches c to global client list */
@@ -125,7 +126,7 @@ void compileregs(void);			/* initialize 
 void focusnext(const char *arg);	/* focuses next visible client */
 void focusprev(const char *arg);	/* focuses prev visible client */
 const char *getsymbol(void);		/* returns symbol of enabled layout */
-void initlayouts(void);			/* initialize layout array */
+void initlayouts(void);			/* initialize layout and mwfact array */
 Bool isarrange(void (*func)());		/* returns True if func is the layout function in use */
 Bool isfloating(void);			/* returns True if floating layout is enabled */
 Bool isvisible(Client *c);		/* returns True if client is visible */
diff -Narup 02_dwm-4.4.1_workspace/screen.c 03_dwm-4.4.1_perworkspace/screen.c
--- 02_dwm-4.4.1_workspace/screen.c	2007-09-16 21:00:56.000000000 +0200
+++ 03_dwm-4.4.1_perworkspace/screen.c	2007-09-16 21:30:28.000000000 +0200
@@ -33,7 +33,7 @@ RULES
 
 static unsigned int nrules = 0;
 static unsigned int nlayouts = 0;
-static unsigned int ltidx = 0; /* default */
+static unsigned int ltidx[MAXWORKSPACES]; /* default */
 static Regs *regs = NULL;
 static Stack *detachstack = NULL;
 
@@ -99,7 +99,7 @@ arrange(void) {
 			unban(c);
 		else
 			ban(c);
-	layouts[ltidx].arrange();
+	layouts[ltidx[selws-1]].arrange();
 	focus(NULL);
 	restack();
 }
@@ -159,7 +159,7 @@ focusprev(const char *arg) {
 const char *
 getsymbol(void)
 {
-	return layouts[ltidx].symbol;
+	return layouts[ltidx[selws-1]].symbol;
 }
 
 void
@@ -172,17 +172,22 @@ initlayouts(void) {
 		if(w > blw)
 			blw = w;
 	}
+
+	for(i = 0; i < MAXWORKSPACES; i++) {
+		mwfact[i] = MWFACT;
+		ltidx[i] = 0;
+	}
 }
 
 Bool
 isfloating(void) {
-	return layouts[ltidx].arrange == floating;
+	return layouts[ltidx[selws-1]].arrange == floating;
 }
 
 Bool
 isarrange(void (*func)())
 {
-	return func == layouts[ltidx].arrange;
+	return func == layouts[ltidx[selws-1]].arrange;
 }
 
 Bool
@@ -230,8 +235,8 @@ setlayout(const char *arg) {
 	unsigned int i;
 
 	if(!arg) {
-		if(++ltidx == nlayouts)
-			ltidx = 0;;
+		if(++ltidx[selws-1] == nlayouts)
+			ltidx[selws-1] = 0;;
 	}
 	else {
 		for(i = 0; i < nlayouts; i++)
@@ -239,7 +244,7 @@ setlayout(const char *arg) {
 				break;
 		if(i == nlayouts)
 			return;
-		ltidx = i;
+		ltidx[selws-1] = i;
 	}
 	if(sel)
 		arrange();
@@ -354,6 +359,7 @@ void
 wscount(const char *arg) {
 	Client *c;
 	int i;
+	unsigned int j;
 
  	i = arg ? atoi(arg) : 0;
 	if (i == 0 )
@@ -361,9 +367,14 @@ wscount(const char *arg) {
 	if (i > 0) {
 		if (workspaces == MAXWORKSPACES)
 			return;
-		workspaces += i;
-		if (workspaces > MAXWORKSPACES)
-			workspaces = MAXWORKSPACES;
+		i = workspaces + i;
+		if (i > MAXWORKSPACES)
+			i = MAXWORKSPACES;
+		while (i > workspaces) {
+			ltidx[workspaces] = ltidx[selws-1];
+			mwfact[workspaces] = mwfact[selws-1];
+			workspaces++;
+		}
 		selws = workspaces;
 	}
 	else {
@@ -376,6 +387,10 @@ wscount(const char *arg) {
 					c->workspace--;
 				else if (c->workspace == selws)
 					pushtostack(c);
+			for(j = selws; j < workspaces; j++) {
+				ltidx[j-1] = ltidx[j];
+				mwfact[j-1] = mwfact[j];
+			}
 			if (selws == workspaces)
 				selws--;
 			workspaces--;
diff -Narup 02_dwm-4.4.1_workspace/tile.c 03_dwm-4.4.1_perworkspace/tile.c
--- 02_dwm-4.4.1_workspace/tile.c	2007-09-16 21:00:56.000000000 +0200
+++ 03_dwm-4.4.1_perworkspace/tile.c	2007-09-16 21:00:56.000000000 +0200
@@ -4,10 +4,10 @@
 
 /* static */
 
-static double mwfact = MWFACT;
-
 /* extern */
 
+double mwfact[MAXWORKSPACES];
+
 void
 setmwfact(const char *arg) {
 	double delta;
@@ -16,16 +16,16 @@ setmwfact(const char *arg) {
 		return;
 	/* arg handling, manipulate mwfact */
 	if(arg == NULL)
-		mwfact = MWFACT;
+		mwfact[selws-1] = MWFACT;
 	else if(1 == sscanf(arg, "%lf", &delta)) {
 		if(arg[0] != '+' && arg[0] != '-')
-			mwfact = delta;
+			mwfact[selws-1] = delta;
 		else
-			mwfact += delta;
-		if(mwfact < 0.1)
-			mwfact = 0.1;
-		else if(mwfact > 0.9)
-			mwfact = 0.9;
+			mwfact[selws-1] += delta;
+		if(mwfact[selws-1] < 0.1)
+			mwfact[selws-1] = 0.1;
+		else if(mwfact[selws-1] > 0.9)
+			mwfact[selws-1] = 0.9;
 	}
 	arrange();
 }
@@ -39,7 +39,7 @@ tile(void) {
 		n++;
 
 	/* window geoms */
-	mw = (n == 1) ? waw : mwfact * waw;
+	mw = (n == 1) ? waw : mwfact[selws-1] * waw;
 	th = (n > 1) ? wah / (n - 1) : 0;
 	if(n > 1 && th < bh)
 		th = wah;
@@ -78,8 +78,8 @@ bstack(void) {
 		n++;
 
 	/* window geoms */
-	mh = (n > 1) ? (wah * mwfact) / 1 : wah / (n > 0 ? n : 1);
-	th = (n > 1) ? (wah * (1 - mwfact)) / 1 : 0;
+	mh = (n > 1) ? (wah * mwfact[selws-1]) / 1 : wah / (n > 0 ? n : 1);
+	th = (n > 1) ? (wah * (1 - mwfact[selws-1])) / 1 : 0;
 	tw = (n > 1) ? waw / (n - 1) : 0;
 
 	for(i = 0, c = nexttiled(clients); c; c = nexttiled(c->next)) {
@@ -138,3 +138,9 @@ zoom(const char *arg) {
 	focus(c);
 	arrange();
 }
+
+void
+inittiles(void) {
+	unsigned int i;
+
+}
