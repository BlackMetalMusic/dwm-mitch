diff -Narup 13_dwm-4.7_fixkeygrab//config.def.h 14_dwm-4.7_warpscreen//config.def.h
--- 13_dwm-4.7_fixkeygrab//config.def.h	2011-12-11 13:27:23.001133316 +0100
+++ 14_dwm-4.7_warpscreen//config.def.h	2011-12-11 13:27:23.021132969 +0100
@@ -100,4 +100,6 @@ Key keys[] = {
 	{ MODKEY|ShiftMask,		XK_h,		viewrel,	"-1" },
 	{ MODKEY|ShiftMask,		XK_h,		popstack,	NULL },
 	{ MODKEY|ShiftMask,		XK_q,		quit,		NULL },
+	{ MODKEY|ControlMask,		XK_l,		warpmouserel,	"1" },
+	{ MODKEY|ControlMask,		XK_h,		warpmouserel,	"-1" },
 };
diff -Narup 13_dwm-4.7_fixkeygrab//dwm.c 14_dwm-4.7_warpscreen//dwm.c
--- 13_dwm-4.7_fixkeygrab//dwm.c	2011-12-11 13:27:23.005133247 +0100
+++ 14_dwm-4.7_warpscreen//dwm.c	2011-12-11 13:29:15.659168178 +0100
@@ -192,6 +192,8 @@ void updatexinerama(void);
 void updatewstext(int screen);
 void view(const char *arg);
 void viewrel(const char *arg);
+void warpmouse(const char *arg);
+void warpmouserel(const char *arg);
 void wscount(const char *arg);
 unsigned int whichscreen(void);
 int xerror(Display *dpy, XErrorEvent *ee);
@@ -1586,6 +1588,40 @@ viewrel(const char *arg) {
         arrange();
 }
 
+void
+warpmouserel(const char *arg) {
+        int i, target, x, y, d;
+	Window w;
+	unsigned int mask, source;
+	
+	if (screenmax == 1)
+	        return;
+	
+	i = arg ? atoi(arg) : 0;
+	if (i == 0)
+                return;
+
+	target = source = whichscreen();
+	target += i;
+	if (target < 0)
+		target = screenmax-1;
+	if (target >= screenmax)
+		target = 0;
+
+	XQueryPointer(dpy, root, &w, &w, &x, &y, &d, &d, &mask);
+
+	x -= sx[source];
+	y -= sy[source];
+
+        if (x > sw[target])
+                x = sw[target];
+        if (y > sh[target])
+                y = sh[target];
+
+        XWarpPointer(dpy, None, root, 0, 0, 0, 0, x + sx[target], y + sy[target]);
+	focus(NULL);
+}
+
 unsigned int
 textnw(const char *text, unsigned int len) {
 	XRectangle r;
@@ -1750,6 +1786,31 @@ view(const char *arg) {
 }
 
 void
+warpmouse(const char *arg) {
+	int target, x, y, d;
+	Window w;
+	unsigned int mask, source;
+	
+	target = arg ? atoi(arg) : 0;
+	source = whichscreen();
+	if ((target < 0) || (target >= screenmax) || (target == source))
+		return;
+
+	XQueryPointer(dpy, root, &w, &w, &x, &y, &d, &d, &mask);
+
+	x -= sx[source];
+	y -= sy[source];
+
+        if (x > sw[target])
+                x = sw[target];
+        if (y > sh[target])
+                y = sh[target];
+
+        XWarpPointer(dpy, None, root, 0, 0, 0, 0, x + sx[target], y + sy[target]);
+	focus(NULL);
+}
+
+void
 pushstack(const char *arg) {
 	if (!sel)
 		return;
